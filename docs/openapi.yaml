openapi: 3.0.3
info:
  title: Bank Cards API
  version: "1.0"

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT

paths:
  /auth/sign-up:
    post:
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required: [email,password]
              properties:
                email: { type: string }
                password: { type: string }
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                properties:
                  token: { type: string }

  /auth/sign-in:
    post:
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required: [email,password]
              properties:
                email: { type: string }
                password: { type: string }
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                properties:
                  token: { type: string }

  /card/all:
    get:
      security:
        - bearerAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id: { type: integer }
                    number: { type: string }
                    status: { type: string }
                    balance: { type: number }

  /card:
    get:
      security:
        - bearerAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                properties:
                  content:
                    type: array
                    items:
                      type: object
                      properties:
                        id: { type: integer }
                        number: { type: string }
                        status: { type: string }
                        balance: { type: number }
    post:
      security:
        - bearerAuth: []
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                number: { type: string }
                validityPeriod: { type: string }
                status: { type: string }
                balance: { type: number }
                userId: { type: integer }
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                properties:
                  id: { type: integer }

  /card/{id}:
    put:
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          schema: { type: integer }
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
    post:
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          schema: { type: integer }
      requestBody:
        content:
          application/json:
            schema:
              type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
    delete:
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          schema: { type: integer }
      responses:
        '204': {}

  /tasks:
    get:
      security:
        - bearerAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items: { type: object }
    post:
      security:
        - bearerAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: boolean

  /user:
    get:
      security:
        - bearerAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items: { type: object }

  /user/send:
    post:
      security:
        - bearerAuth: []
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          content:
            application/json:
              schema:
                type: boolean

  /user/balance:
    get:
      security:
        - bearerAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: number
